geonode.harvesting.tests.harvesters.geonode
===========================================

.. py:module:: geonode.harvesting.tests.harvesters.geonode


Attributes
----------

.. autoapisummary::

   geonode.harvesting.tests.harvesters.geonode.test_resources


Classes
-------

.. autoapisummary::

   geonode.harvesting.tests.harvesters.geonode.TestGeonodeHarvester


Functions
---------

.. autoapisummary::

   geonode.harvesting.tests.harvesters.geonode.geonode_get_total_records
   geonode.harvesting.tests.harvesters.geonode.geonode_list_resources_by_type


Module Contents
---------------

.. py:data:: test_resources

.. py:function:: geonode_get_total_records(cls, resource_type: geonode.harvesting.harvesters.geonodeharvester.GeoNodeResourceType)

   Fake _get_total_records function on GeonodeLegacyHarvester


.. py:function:: geonode_list_resources_by_type(cls, resource_type: geonode.harvesting.harvesters.geonodeharvester.GeoNodeResourceType, offset: int)

   Fake _list_resources_by_type function on GeonodeLegacyHarvester


.. py:class:: TestGeonodeHarvester

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   Test GeonodeLegacyHarvester


   .. py:attribute:: remote_url
      :value: 'test.com'



   .. py:attribute:: name
      :value: 'This is geonode harvester'



   .. py:attribute:: user


   .. py:attribute:: harvester_type
      :value: 'geonode.harvesting.harvesters.geonode.GeonodeLegacyHarvester'



   .. py:method:: setUp()


   .. py:method:: test_base_api_url()

      Test the return of base_api_url



   .. py:method:: test_allows_copying_resources()

      Test the return of allows_copying_resources



   .. py:method:: test_get_num_available_resources_by_type()

      Test function of _get_num_available_resources_by_type



   .. py:method:: test_get_num_available_resources()

      Test function of get_num_available_resources for each of type in GeonodeLegacyHarvester



   .. py:method:: test_list_resources_by_type()

      Test _list_resources_by_type function for every type in GeonodeLegacyHarvester



   .. py:method:: test_extract_unique_identifier()

      Test _extract_unique_identifier function



   .. py:method:: test_worker_from_django_record()

      Test worker that genearted by harvester



