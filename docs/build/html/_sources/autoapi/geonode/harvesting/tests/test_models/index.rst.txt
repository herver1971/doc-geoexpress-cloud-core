geonode.harvesting.tests.test_models
====================================

.. py:module:: geonode.harvesting.tests.test_models


Classes
-------

.. autoapisummary::

   geonode.harvesting.tests.test_models.HarvesterTestCase
   geonode.harvesting.tests.test_models.AsynchronousHarvestingSessionTestCase
   geonode.harvesting.tests.test_models.HarvestableResourceTestCase
   geonode.harvesting.tests.test_models.WorkerConfigValidationTestCase


Module Contents
---------------

.. py:class:: HarvesterTestCase

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   .. py:attribute:: remote_url
      :value: 'test.com'



   .. py:attribute:: name
      :value: 'This is geonode harvester'



   .. py:attribute:: user


   .. py:attribute:: harvester_type
      :value: 'geonode.harvesting.harvesters.geonodeharvester.GeonodeLegacyHarvester'



   .. py:method:: setUp()


   .. py:method:: test_get_worker_works()


   .. py:method:: test_validate_worker_configuration(mock_import_string, mock_jsonschema)


   .. py:method:: test_get_next_check_availability_dispatch_time(mock_timezone)


   .. py:method:: test_get_next_dispatch_time(mock_timezone)


.. py:class:: AsynchronousHarvestingSessionTestCase

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   .. py:attribute:: remote_url
      :value: 'test.com'



   .. py:attribute:: name
      :value: 'This is geonode harvester'



   .. py:attribute:: user


   .. py:attribute:: harvester_type
      :value: 'geonode.harvesting.harvesters.geonodeharvester.GeonodeLegacyHarvester'



   .. py:method:: setUp()


   .. py:method:: test_check_attributes()

      Test attributes of harvester_session after created.



.. py:class:: HarvestableResourceTestCase

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   .. py:attribute:: unique_identifier
      :value: 'id'



   .. py:attribute:: title
      :value: 'Test'



   .. py:attribute:: remote_url
      :value: 'test.com'



   .. py:attribute:: name
      :value: 'This is geonode harvester'



   .. py:attribute:: user


   .. py:attribute:: harvester_type
      :value: 'geonode.harvesting.harvesters.geonodeharvester.GeonodeLegacyHarvester'



   .. py:method:: setUp()


   .. py:method:: test_check_attributes()


.. py:class:: WorkerConfigValidationTestCase

   Bases: :py:obj:`django.test.SimpleTestCase`


   .. py:method:: test_validate_worker_configuration(mock_import_string, mock_jsonschema)


