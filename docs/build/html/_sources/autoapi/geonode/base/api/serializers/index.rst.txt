geonode.base.api.serializers
============================

.. py:module:: geonode.base.api.serializers


Attributes
----------

.. autoapisummary::

   geonode.base.api.serializers.logger
   geonode.base.api.serializers.api_bbox_settable_resource_models


Classes
-------

.. autoapisummary::

   geonode.base.api.serializers.BaseDynamicModelSerializer
   geonode.base.api.serializers.ResourceBaseToRepresentationSerializerMixin
   geonode.base.api.serializers.ResourceBaseTypesSerializer
   geonode.base.api.serializers.PermSpecSerialiazer
   geonode.base.api.serializers.GroupSerializer
   geonode.base.api.serializers.GroupProfileSerializer
   geonode.base.api.serializers.SimpleHierarchicalKeywordSerializer
   geonode.base.api.serializers._ThesaurusKeywordSerializerMixIn
   geonode.base.api.serializers.SimpleThesaurusKeywordSerializer
   geonode.base.api.serializers.SimpleRegionSerializer
   geonode.base.api.serializers.SimpleTopicCategorySerializer
   geonode.base.api.serializers.RestrictionCodeTypeSerializer
   geonode.base.api.serializers.LicenseSerializer
   geonode.base.api.serializers.SpatialRepresentationTypeSerializer
   geonode.base.api.serializers.AvatarUrlField
   geonode.base.api.serializers.EmbedUrlField
   geonode.base.api.serializers.DetailUrlField
   geonode.base.api.serializers.ExtraMetadataSerializer
   geonode.base.api.serializers.ThumbnailUrlField
   geonode.base.api.serializers.DownloadLinkField
   geonode.base.api.serializers.DownloadArrayLinkField
   geonode.base.api.serializers.FavoriteField
   geonode.base.api.serializers.UserSerializer
   geonode.base.api.serializers.ContactRoleField
   geonode.base.api.serializers.ExtentBboxField
   geonode.base.api.serializers.DataBlobField
   geonode.base.api.serializers.DataBlobSerializer
   geonode.base.api.serializers.ResourceExecutionRequestSerializer
   geonode.base.api.serializers.ResourceBaseSerializer
   geonode.base.api.serializers.FavoriteSerializer
   geonode.base.api.serializers.BaseResourceCountSerializer
   geonode.base.api.serializers.HierarchicalKeywordSerializer
   geonode.base.api.serializers.ThesaurusKeywordSerializer
   geonode.base.api.serializers.RegionSerializer
   geonode.base.api.serializers.TopicCategorySerializer
   geonode.base.api.serializers.OwnerSerializer
   geonode.base.api.serializers.SimpleResourceSerializer
   geonode.base.api.serializers.LinkedResourceSerializer


Module Contents
---------------

.. py:data:: logger

.. py:class:: BaseDynamicModelSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:method:: to_representation(instance)


.. py:class:: ResourceBaseToRepresentationSerializerMixin

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:method:: to_representation(instance)


.. py:class:: ResourceBaseTypesSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicEphemeralSerializer`


   .. py:attribute:: name


   .. py:attribute:: count


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'resource-types'




.. py:class:: PermSpecSerialiazer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicEphemeralSerializer`


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'perm-spec'




   .. py:class:: PermSpecFieldSerialiazer

      Bases: :py:obj:`dynamic_rest.serializers.DynamicEphemeralSerializer`


      .. py:attribute:: perm_spec



   .. py:attribute:: users


   .. py:attribute:: groups


.. py:class:: GroupSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'group'



      .. py:attribute:: fields
         :value: ('pk', 'name')




.. py:class:: GroupProfileSerializer

   Bases: :py:obj:`BaseDynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'group_profile'



      .. py:attribute:: view_name
         :value: 'group-profiles-list'



      .. py:attribute:: fields
         :value: ('pk', 'title', 'group', 'slug', 'logo', 'description', 'email', 'keywords', 'access', 'categories')




   .. py:attribute:: group


   .. py:attribute:: keywords


   .. py:attribute:: categories


.. py:class:: SimpleHierarchicalKeywordSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'HierarchicalKeyword'



      .. py:attribute:: fields
         :value: ('name', 'slug')




   .. py:method:: to_representation(value)


.. py:class:: _ThesaurusKeywordSerializerMixIn

   .. py:method:: to_representation(value)


.. py:class:: SimpleThesaurusKeywordSerializer

   Bases: :py:obj:`_ThesaurusKeywordSerializerMixIn`, :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'ThesaurusKeyword'



      .. py:attribute:: fields
         :value: ('alt_label',)




.. py:class:: SimpleRegionSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'Region'



      .. py:attribute:: fields
         :value: ('code', 'name')




.. py:class:: SimpleTopicCategorySerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'TopicCategory'



      .. py:attribute:: fields
         :value: ('identifier', 'gn_description')




.. py:class:: RestrictionCodeTypeSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'RestrictionCodeType'



      .. py:attribute:: fields
         :value: ('identifier',)




.. py:class:: LicenseSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'License'



      .. py:attribute:: fields
         :value: ('identifier',)




.. py:class:: SpatialRepresentationTypeSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'SpatialRepresentationType'



      .. py:attribute:: fields
         :value: ('identifier',)




.. py:class:: AvatarUrlField(avatar_size, **kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:attribute:: avatar_size


   .. py:method:: get_attribute(instance)


.. py:class:: EmbedUrlField(**kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


.. py:class:: DetailUrlField(**kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


.. py:class:: ExtraMetadataSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'ExtraMetadata'



      .. py:attribute:: fields
         :value: ('pk', 'metadata')




   .. py:method:: to_representation(obj)


.. py:class:: ThumbnailUrlField(**kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


.. py:class:: DownloadLinkField(**kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


.. py:class:: DownloadArrayLinkField(**kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


.. py:class:: FavoriteField(**kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


.. py:class:: UserSerializer

   Bases: :py:obj:`BaseDynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: ref_name
         :value: 'UserProfile'



      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'user'



      .. py:attribute:: view_name
         :value: 'users-list'



      .. py:attribute:: fields
         :value: ('pk', 'username', 'first_name', 'last_name', 'avatar', 'perms', 'is_superuser', 'is_staff', 'email')




   .. py:method:: setup_eager_loading(queryset)
      :classmethod:


      Perform necessary eager loading of data.



   .. py:method:: to_representation(instance)


   .. py:attribute:: avatar


.. py:class:: ContactRoleField(contact_type, **kwargs)

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:attribute:: default_error_messages


   .. py:attribute:: contact_type


   .. py:method:: get_attribute(instance)


   .. py:method:: to_representation(value)


   .. py:method:: get_pks_of_users_to_set(value)


   .. py:method:: to_internal_value(value)


.. py:class:: ExtentBboxField

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicComputedField`


   .. py:method:: get_attribute(instance)


   .. py:method:: to_representation(value)


.. py:class:: DataBlobField

   Bases: :py:obj:`dynamic_rest.fields.fields.DynamicRelationField`


   .. py:method:: value_to_string(obj)


.. py:class:: DataBlobSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: fields
         :value: ('pk', 'blob')




   .. py:method:: to_representation(value)


.. py:class:: ResourceExecutionRequestSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: fields
         :value: ('pk',)




   .. py:method:: to_representation(instance)


.. py:data:: api_bbox_settable_resource_models

.. py:class:: ResourceBaseSerializer(*args, **kwargs)

   Bases: :py:obj:`ResourceBaseToRepresentationSerializerMixin`, :py:obj:`BaseDynamicModelSerializer`


   .. py:attribute:: metadata


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'resource'



      .. py:attribute:: view_name
         :value: 'base-resources-list'



      .. py:attribute:: fields
         :value: ('pk', 'uuid', 'resource_type', 'polymorphic_ctype_id', 'perms', 'owner', 'poc',...



      .. py:attribute:: extra_kwargs



   .. py:method:: to_internal_value(data)


   .. py:method:: save(**kwargs)


   .. py:attribute:: data

      



      - Deferred / not Embedded --> ?include[]=executions


   .. py:attribute:: executions


.. py:class:: FavoriteSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:attribute:: resource


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'favorites'



      .. py:attribute:: fields
         :value: ('resource',)




   .. py:method:: to_representation(value)


   .. py:method:: get_resource(instance)


.. py:class:: BaseResourceCountSerializer

   Bases: :py:obj:`BaseDynamicModelSerializer`


   .. py:method:: to_representation(instance)


.. py:class:: HierarchicalKeywordSerializer

   Bases: :py:obj:`BaseResourceCountSerializer`


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'keywords'



      .. py:attribute:: model


      .. py:attribute:: count_type
         :value: 'keywords'



      .. py:attribute:: view_name
         :value: 'keywords-list'



      .. py:attribute:: fields
         :value: '__all__'




.. py:class:: ThesaurusKeywordSerializer

   Bases: :py:obj:`_ThesaurusKeywordSerializerMixIn`, :py:obj:`BaseResourceCountSerializer`


   .. py:class:: Meta

      .. py:attribute:: model


      .. py:attribute:: name
         :value: 'tkeywords'



      .. py:attribute:: view_name
         :value: 'tkeywords-list'



      .. py:attribute:: count_type
         :value: 'tkeywords'



      .. py:attribute:: fields
         :value: '__all__'




.. py:class:: RegionSerializer

   Bases: :py:obj:`BaseResourceCountSerializer`


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'regions'



      .. py:attribute:: model


      .. py:attribute:: count_type
         :value: 'regions'



      .. py:attribute:: view_name
         :value: 'regions-list'



      .. py:attribute:: fields
         :value: '__all__'




.. py:class:: TopicCategorySerializer

   Bases: :py:obj:`BaseResourceCountSerializer`


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'categories'



      .. py:attribute:: model


      .. py:attribute:: count_type
         :value: 'category'



      .. py:attribute:: view_name
         :value: 'categories-list'



      .. py:attribute:: fields
         :value: '__all__'




.. py:class:: OwnerSerializer

   Bases: :py:obj:`BaseResourceCountSerializer`


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'owners'



      .. py:attribute:: count_type
         :value: 'owner'



      .. py:attribute:: view_name
         :value: 'owners-list'



      .. py:attribute:: model


      .. py:attribute:: fields
         :value: ('pk', 'username', 'first_name', 'last_name', 'avatar', 'perms')




   .. py:attribute:: avatar


.. py:class:: SimpleResourceSerializer

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'linked_resources'



      .. py:attribute:: model


      .. py:attribute:: fields
         :value: ('pk', 'title', 'resource_type', 'detail_url', 'thumbnail_url')




   .. py:method:: to_representation(instance: geonode.base.models.LinkedResource)


.. py:class:: LinkedResourceSerializer(*kargs, serialize_source: bool = False, **kwargs)

   Bases: :py:obj:`dynamic_rest.serializers.DynamicModelSerializer`


   .. py:attribute:: serialize_target


   .. py:class:: Meta

      .. py:attribute:: name
         :value: 'linked_resources'



      .. py:attribute:: model


      .. py:attribute:: fields
         :value: ('internal',)




   .. py:method:: to_representation(instance: geonode.base.models.LinkedResource)


