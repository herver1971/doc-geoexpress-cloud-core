geonode.monitoring
==================

.. py:module:: geonode.monitoring


Subpackages
-----------

.. toctree::
   :maxdepth: 1

   /autoapi/geonode/monitoring/management/index
   /autoapi/geonode/monitoring/tests/index


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/geonode/monitoring/admin/index
   /autoapi/geonode/monitoring/aggregation/index
   /autoapi/geonode/monitoring/collector/index
   /autoapi/geonode/monitoring/fields/index
   /autoapi/geonode/monitoring/forms/index
   /autoapi/geonode/monitoring/middleware/index
   /autoapi/geonode/monitoring/models/index
   /autoapi/geonode/monitoring/probes/index
   /autoapi/geonode/monitoring/service_handlers/index
   /autoapi/geonode/monitoring/tasks/index
   /autoapi/geonode/monitoring/urls/index
   /autoapi/geonode/monitoring/utils/index
   /autoapi/geonode/monitoring/views/index
   /autoapi/geonode/monitoring/widgets/index


Attributes
----------

.. autoapisummary::

   geonode.monitoring.has_notifications
   geonode.monitoring.log
   geonode.monitoring.default_app_config


Classes
-------

.. autoapisummary::

   geonode.monitoring.NotificationsAppConfigBase
   geonode.monitoring.MonitoringAppConfig


Functions
---------

.. autoapisummary::

   geonode.monitoring.run_setup_hooks


Package Contents
----------------

.. py:class:: NotificationsAppConfigBase

   Bases: :py:obj:`django.apps.AppConfig`


   Base class for AppConfig notifications setup

   You should subclass it and provide list of notifications
   in NOTIFICATIONS attribute to automatically register to
   post_migrate signal.


   .. py:attribute:: NOTIFICATIONS


   .. py:method:: _get_logger()


   .. py:method:: _register_notifications(*args, **kwargs)


   .. py:method:: ready()


.. py:data:: has_notifications

.. py:data:: log

.. py:function:: run_setup_hooks(*args, **kwargs)

.. py:class:: MonitoringAppConfig

   Bases: :py:obj:`geonode.notifications_helper.NotificationsAppConfigBase`


   Base class for AppConfig notifications setup

   You should subclass it and provide list of notifications
   in NOTIFICATIONS attribute to automatically register to
   post_migrate signal.


   .. py:attribute:: name
      :value: 'geonode.monitoring'



   .. py:attribute:: NOTIFICATION_NAME
      :value: 'monitoring_alert'



   .. py:attribute:: NOTIFICATIONS


   .. py:method:: ready()


.. py:data:: default_app_config
   :value: 'geonode.monitoring.MonitoringAppConfig'


