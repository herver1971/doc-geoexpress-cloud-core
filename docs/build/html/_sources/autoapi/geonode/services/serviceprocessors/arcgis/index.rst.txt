geonode.services.serviceprocessors.arcgis
=========================================

.. py:module:: geonode.services.serviceprocessors.arcgis

.. autoapi-nested-parse::

   Utilities for enabling ESRI:ArcGIS:MapServer and ESRI:ArcGIS:ImageServer remote services in geonode.



Attributes
----------

.. autoapisummary::

   geonode.services.serviceprocessors.arcgis.logger
   geonode.services.serviceprocessors.arcgis.MapLayer


Classes
-------

.. autoapisummary::

   geonode.services.serviceprocessors.arcgis.ArcMapServiceHandler
   geonode.services.serviceprocessors.arcgis.ArcImageServiceHandler


Module Contents
---------------

.. py:data:: logger

.. py:data:: MapLayer

.. py:class:: ArcMapServiceHandler(url, geonode_service_id=None)

   Bases: :py:obj:`geonode.services.serviceprocessors.base.ServiceHandlerBase`


   Remote service handler for ESRI:ArcGIS:MapServer services


   .. py:attribute:: service_type


   .. py:attribute:: indexing_method


   .. py:attribute:: name


   .. py:attribute:: title


   .. py:property:: parsed_service


   .. py:method:: probe()


   .. py:method:: create_cascaded_store(service)


   .. py:method:: create_geonode_service(owner, parent=None)

      Create a new geonode.service.models.Service instance

      :arg owner: The user who will own the service instance
      :type owner: geonode.people.models.Profile




   .. py:method:: get_keywords()


   .. py:method:: get_harvester_configuration_options()


   .. py:method:: _parse_datasets(layers)


   .. py:method:: _dataset_meta(layer)


   .. py:method:: _offers_geonode_projection(srs)


   .. py:method:: _get_indexed_dataset_fields(dataset_meta)


.. py:class:: ArcImageServiceHandler(url, geonode_service_id=None)

   Bases: :py:obj:`ArcMapServiceHandler`


   Remote service handler for ESRI:ArcGIS:ImageService services


   .. py:attribute:: service_type


   .. py:attribute:: url


   .. py:attribute:: indexing_method


   .. py:attribute:: name


   .. py:attribute:: title


   .. py:property:: parsed_service


   .. py:method:: get_harvester_configuration_options()


