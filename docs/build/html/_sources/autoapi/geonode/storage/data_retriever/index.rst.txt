geonode.storage.data_retriever
==============================

.. py:module:: geonode.storage.data_retriever


Attributes
----------

.. autoapisummary::

   geonode.storage.data_retriever.logger


Classes
-------

.. autoapisummary::

   geonode.storage.data_retriever.DataItemRetriever
   geonode.storage.data_retriever.DataRetriever


Module Contents
---------------

.. py:data:: logger

.. py:class:: DataItemRetriever(_file)

   Bases: :py:obj:`object`


   .. py:attribute:: temporary_folder
      :value: None



   .. py:attribute:: file_path
      :value: None



   .. py:attribute:: _is_django_form_file
      :value: False



   .. py:attribute:: _django_form_file
      :value: None



   .. py:attribute:: _original_file_uri
      :value: None



   .. py:attribute:: _smart_open_uri
      :value: None



   .. py:method:: delete_temporary_file()


   .. py:method:: get_path(allow_transfer=True)


   .. py:method:: transfer_remote_file(temporary_folder=None)


   .. py:property:: size


   .. py:property:: name


.. py:class:: DataRetriever(files, tranfer_at_creation=False)

   Bases: :py:obj:`object`


   .. py:attribute:: temporary_folder
      :value: None



   .. py:attribute:: file_paths


   .. py:attribute:: data_items


   .. py:method:: transfer_remote_files()


   .. py:method:: get_paths(allow_transfer=False)


   .. py:method:: delete_files(force=False)


   .. py:method:: get(key, default=None)


   .. py:method:: items()


   .. py:method:: _unzip(zip_name: str) -> Mapping


