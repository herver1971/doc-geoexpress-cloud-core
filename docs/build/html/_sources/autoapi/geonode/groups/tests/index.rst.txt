geonode.groups.tests
====================

.. py:module:: geonode.groups.tests


Attributes
----------

.. autoapisummary::

   geonode.groups.tests.logger


Classes
-------

.. autoapisummary::

   geonode.groups.tests.GroupsSmokeTest


Functions
---------

.. autoapisummary::

   geonode.groups.tests._log


Module Contents
---------------

.. py:data:: logger

.. py:function:: _log(msg, *args)

.. py:class:: GroupsSmokeTest

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   .. py:attribute:: fixtures
      :value: ['initial_data.json', 'group_test_data.json', 'default_oauth_apps.json']



   .. py:method:: setUpClass()
      :classmethod:



   .. py:method:: tearDownClass()
      :classmethod:



   .. py:method:: setUp()


   .. py:method:: test_registered_group_exists()

      Ensures that a default group and grouprofile 'registered-users' has been
      created at initialization time.



   .. py:method:: test_users_group_list_view()

      1. Ensures that a superuser can see the whole group list.

      2. Ensures that a user can see only public/public-invite groups.

      3. Ensures that a user belonging to a private group, can see it.



   .. py:method:: test_group_permissions_extend_to_user()

      Ensures that when a user is in a group, the group permissions
      extend to the user.



   .. py:method:: test_group_resource()

      Tests the resources method on a Group object.



   .. py:method:: test_perms_info()

      Tests the perms_info function (which passes permissions to the response context).



   .. py:method:: test_resource_permissions()

      Tests that the client can get and set group permissions through the test_resource_permissions view.



   .. py:method:: test_create_new_group()

      Tests creating a group through the group_create route.



   .. py:method:: test_delete_group_view()

      Tests deleting a group through the group_delete route.



   .. py:method:: test_delete_group_view_no_perms()

      Tests deleting a group through the group_delete with a non-manager.



   .. py:method:: test_groupmember_manager()

      Tests the get_managers method.



   .. py:method:: test_public_pages_render()

      Verify pages that do not require login load without internal error



   .. py:method:: test_protected_pages_render()

      Verify pages that require login load without internal error



   .. py:method:: test_group_is_member()

      Tests checking group membership



   .. py:method:: test_group_add_member()

      Tests adding a user to a group



   .. py:method:: test_group_promote_demote_member()

      Tests promoting a member to manager, demoting to member



   .. py:method:: test_profile_is_member_of_group()

      Tests profile is_member_of_group property



   .. py:method:: test_group_remove_member()

      Tests removing a user from a group



   .. py:method:: test_group_logo_is_present_on_list_view()

      Verify that a group's logo is rendered on list view.



   .. py:method:: test_group_logo_is_not_present_on_list_view()

      Verify that no logo exists in list view when a group doesn't have one.



   .. py:method:: test_group_activity_pages_render()

      Verify Activity List pages



   .. py:method:: test_api()


   .. py:method:: test_group_categories_list()


   .. py:method:: test_group_categories_add()


