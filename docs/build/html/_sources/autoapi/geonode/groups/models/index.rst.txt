geonode.groups.models
=====================

.. py:module:: geonode.groups.models


Attributes
----------

.. autoapisummary::

   geonode.groups.models.logger


Classes
-------

.. autoapisummary::

   geonode.groups.models.GroupCategory
   geonode.groups.models.GroupProfile
   geonode.groups.models.GroupMember


Functions
---------

.. autoapisummary::

   geonode.groups.models.group_category_pre_save
   geonode.groups.models.group_pre_delete


Module Contents
---------------

.. py:data:: logger

.. py:class:: GroupCategory

   Bases: :py:obj:`django.db.models.Model`


   .. py:attribute:: slug


   .. py:attribute:: name


   .. py:attribute:: description


   .. py:class:: Meta

      .. py:attribute:: verbose_name_plural



   .. py:method:: __str__()


   .. py:method:: get_absolute_url()


.. py:function:: group_category_pre_save(sender, instance, *args, **kwargs)

.. py:class:: GroupProfile

   Bases: :py:obj:`django.db.models.Model`


   .. py:attribute:: GROUP_CHOICES


   .. py:attribute:: access_help_text


   .. py:attribute:: email_help_text


   .. py:attribute:: group


   .. py:attribute:: title


   .. py:attribute:: slug


   .. py:attribute:: logo


   .. py:attribute:: description


   .. py:attribute:: email


   .. py:attribute:: keywords


   .. py:attribute:: access


   .. py:attribute:: categories


   .. py:attribute:: created


   .. py:attribute:: last_modified


   .. py:method:: save(*args, **kwargs)


   .. py:method:: delete(*args, **kwargs)


   .. py:method:: groups_for_user(user)
      :classmethod:


      Returns the groups that user is a member of.  If the user is a superuser, all groups are returned.



   .. py:method:: __str__()


   .. py:method:: keyword_list()

      Returns a list of the Group's keywords.



   .. py:method:: resources(resource_type=None)

      Returns a generator of objects that this group has permissions on.

      :param resource_type: Filter's the queryset to objects with the same type.



   .. py:method:: member_queryset()


   .. py:method:: get_members()

      Returns a queryset of the group's members.



   .. py:method:: get_managers()

      Returns a queryset of the group's managers.



   .. py:method:: user_is_member(user)


   .. py:method:: user_is_role(user, role)


   .. py:method:: can_view(user)


   .. py:method:: validate_user(user)


   .. py:method:: join(user, **kwargs)


   .. py:method:: leave(user, **kwargs)


   .. py:method:: promote(user, **kwargs)


   .. py:method:: demote(user, **kwargs)


   .. py:method:: get_absolute_url()


   .. py:property:: class_name


   .. py:property:: logo_url


.. py:class:: GroupMember

   Bases: :py:obj:`django.db.models.Model`


   .. py:attribute:: MANAGER
      :value: 'manager'



   .. py:attribute:: MEMBER
      :value: 'member'



   .. py:attribute:: group


   .. py:attribute:: user


   .. py:attribute:: role


   .. py:attribute:: joined


   .. py:method:: save(*args, **kwargs)


   .. py:method:: delete(*args, **kwargs)


   .. py:method:: promote(*args, **kwargs)


   .. py:method:: demote(*args, **kwargs)


   .. py:method:: _handle_perms(role=None)


.. py:function:: group_pre_delete(instance, sender, **kwargs)

   Make sure that the anonymous group is not deleted


