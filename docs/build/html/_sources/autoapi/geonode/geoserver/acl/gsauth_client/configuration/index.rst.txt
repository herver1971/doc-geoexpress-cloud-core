geonode.geoserver.acl.gsauth_client.configuration
=================================================

.. py:module:: geonode.geoserver.acl.gsauth_client.configuration

.. autoapi-nested-parse::

   GeoServer ACL

   GeoServer Access Control List API  # noqa: E501

   The version of the OpenAPI document: 1.0.0
   Generated by: https://openapi-generator.tech



Attributes
----------

.. autoapisummary::

   geonode.geoserver.acl.gsauth_client.configuration.JSON_SCHEMA_VALIDATION_KEYWORDS


Classes
-------

.. autoapisummary::

   geonode.geoserver.acl.gsauth_client.configuration.Configuration


Module Contents
---------------

.. py:data:: JSON_SCHEMA_VALIDATION_KEYWORDS

.. py:class:: Configuration(host=None, api_key=None, api_key_prefix=None, username=None, password=None, discard_unknown_keys=False, disabled_client_side_validations='', server_index=None, server_variables=None, server_operation_index=None, server_operation_variables=None, ssl_ca_cert=None)

   Bases: :py:obj:`object`


   NOTE: This class is auto generated by OpenAPI Generator

       Ref: https://openapi-generator.tech
       Do not edit the class manually.

       :param host: Base url
       :param api_key: Dict to store API key(s).
         Each entry in the dict specifies an API key.
         The dict key is the name of the security scheme in the OAS specification.
         The dict value is the API key secret.
       :param api_key_prefix: Dict to store API prefix (e.g. Bearer)
         The dict key is the name of the security scheme in the OAS specification.
         The dict value is an API key prefix when generating the auth data.
       :param username: Username for HTTP basic authentication
       :param password: Password for HTTP basic authentication
       :param discard_unknown_keys: Boolean value indicating whether to discard
         unknown properties. A server may send a response that includes additional
         properties that are not known by the client in the following scenarios:
         1. The OpenAPI document is incomplete, i.e. it does not match the server
            implementation.
         2. The client was generated using an older version of the OpenAPI document
            and the server has been upgraded since then.
         If a schema in the OpenAPI document defines the additionalProperties attribute,
         then all undeclared properties received by the server are injected into the
         additional properties map. In that case, there are undeclared properties, and
         nothing to discard.
       :param disabled_client_side_validations (string): Comma-separated list of
         JSON schema validation keywords to disable JSON schema structural validation
         rules. The following keywords may be specified: multipleOf, maximum,
         exclusiveMaximum, minimum, exclusiveMinimum, maxLength, minLength, pattern,
         maxItems, minItems.
         By default, the validation is performed for data generated locally by the client
         and data received from the server, independent of any validation performed by
         the server side. If the input data does not satisfy the JSON schema validation
         rules specified in the OpenAPI document, an exception is raised.
         If disabled_client_side_validations is set, structural validation is
         disabled. This can be useful to troubleshoot data validation problem, such as
         when the OpenAPI document validation rules do not match the actual API data
         received by the server.
       :param server_index: Index to servers configuration.
       :param server_variables: Mapping with string values to replace variables in
         templated server configuration. The validation of enums is performed for
         variables with defined enum values before.
       :param server_operation_index: Mapping from operation ID to an index to server
         configuration.
       :param server_operation_variables: Mapping from operation ID to a mapping with
         string values to replace variables in templated server configuration.
         The validation of enums is performed for variables with defined enum values before.
       :param ssl_ca_cert: str - the path to a file of concatenated CA certificates
         in PEM format

       :Example:

       HTTP Basic Authentication Example.
       Given the following security scheme in the OpenAPI specification:
         components:
           securitySchemes:
             http_basic_auth:
               type: http
               scheme: basic

       Configure API client with HTTP basic authentication:

   conf = gsauth_client.Configuration(
       username='the-user',
       password='the-password',
   )




   .. py:attribute:: _default
      :value: None



   .. py:attribute:: _base_path

      Default Base url


   .. py:attribute:: server_index


   .. py:attribute:: server_operation_index

      Default server index


   .. py:attribute:: server_variables


   .. py:attribute:: server_operation_variables

      Default server variables


   .. py:attribute:: temp_folder_path
      :value: None


      Temp file folder for downloading files


   .. py:attribute:: api_key


   .. py:attribute:: api_key_prefix


   .. py:attribute:: refresh_api_key_hook
      :value: None


      function hook to refresh API key if expired


   .. py:attribute:: username

      Username for HTTP basic authentication


   .. py:attribute:: password

      Password for HTTP basic authentication


   .. py:attribute:: discard_unknown_keys


   .. py:attribute:: disabled_client_side_validations


   .. py:attribute:: logger

      Logging Settings


   .. py:property:: logger_format
      The logger format.

      The logger_formatter will be updated when sets logger_format.

      :param value: The format string.
      :type: str


   .. py:attribute:: logger_stream_handler
      :value: None


      Log stream handler


   .. py:attribute:: logger_file_handler
      :value: None


      Log file handler


   .. py:property:: logger_file
      The logger file.

      If the logger_file is None, then add stream handler and remove file
      handler. Otherwise, add file handler and remove stream handler.

      :param value: The logger_file path.
      :type: str


   .. py:property:: debug
      Debug status

      :param value: The debug status, True or False.
      :type: bool


   .. py:attribute:: verify_ssl
      :value: True


      SSL/TLS verification
      Set this to false to skip verifying SSL certificate when calling API
      from https server.


   .. py:attribute:: ssl_ca_cert

      Set this to customize the certificate file to verify the peer.


   .. py:attribute:: cert_file
      :value: None


      client certificate file


   .. py:attribute:: key_file
      :value: None


      client key file


   .. py:attribute:: assert_hostname
      :value: None


      Set this to True/False to enable/disable SSL hostname verification.


   .. py:attribute:: connection_pool_maxsize

      urllib3 connection pool's maximum number of connections saved
      per pool. urllib3 uses 1 connection as default value, but this is
      not the best value when you are making a lot of possibly parallel
      requests to the same host, which is often the case here.
      cpu_count * 5 is used as default value to increase performance.


   .. py:attribute:: proxy
      :value: None


      Proxy URL


   .. py:attribute:: proxy_headers
      :value: None


      Proxy headers


   .. py:attribute:: safe_chars_for_path_param
      :value: ''


      Safe chars for path_param


   .. py:attribute:: retries
      :value: None


      Adding retries to override urllib3 default value 3


   .. py:attribute:: client_side_validation
      :value: True



   .. py:attribute:: socket_options
      :value: None


      Options to pass down to the underlying urllib3 socket


   .. py:method:: __deepcopy__(memo)


   .. py:method:: __setattr__(name, value)


   .. py:method:: set_default(default)
      :classmethod:


      Set default instance of configuration.

      It stores default configuration, which can be
      returned by get_default_copy method.

      :param default: object of Configuration



   .. py:method:: get_default_copy()
      :classmethod:


      Return new instance of configuration.

      This method returns newly created, based on default constructor,
      object of Configuration class or returns a copy of default
      configuration passed by the set_default method.

      :return: The configuration object.



   .. py:method:: get_api_key_with_prefix(identifier, alias=None)

      Gets API key (with prefix if set).

      :param identifier: The identifier of apiKey.
      :param alias: The alternative identifier of apiKey.
      :return: The token for api key authentication.



   .. py:method:: get_basic_auth_token()

      Gets HTTP basic authentication header (string).

      :return: The token for basic HTTP authentication.



   .. py:method:: auth_settings()

      Gets Auth Settings dict for api client.

      :return: The Auth Settings information dict.



   .. py:method:: to_debug_report()

      Gets the essential information for debugging.

      :return: The report for debugging.



   .. py:method:: get_host_settings()

      Gets an array of host settings

      :return: An array of host settings



   .. py:method:: get_host_from_settings(index, variables=None, servers=None)

      Gets host URL based on the index and variables
      :param index: array index of the host settings
      :param variables: hash of variable and the corresponding value
      :param servers: an array of host settings or None
      :return: URL based on host settings



   .. py:property:: host
      Return generated host.


