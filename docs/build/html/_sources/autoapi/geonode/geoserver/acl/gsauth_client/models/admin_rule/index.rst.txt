geonode.geoserver.acl.gsauth_client.models.admin_rule
=====================================================

.. py:module:: geonode.geoserver.acl.gsauth_client.models.admin_rule

.. autoapi-nested-parse::

   GeoServer ACL

   GeoServer Access Control List API  # noqa: E501

   The version of the OpenAPI document: 1.0.0
   Generated by: https://openapi-generator.tech



Classes
-------

.. autoapisummary::

   geonode.geoserver.acl.gsauth_client.models.admin_rule.AdminRule


Module Contents
---------------

.. py:class:: AdminRule(id=None, priority=None, access=None, ext_id=None, name=None, description=None, instance=None, role=None, user=None, workspace=None, address_range=None, local_vars_configuration=None)

   Bases: :py:obj:`object`


   NOTE: This class is auto generated by OpenAPI Generator.
   Ref: https://openapi-generator.tech

   Do not edit the class manually.


   .. py:attribute:: openapi_types


   .. py:attribute:: attribute_map


   .. py:attribute:: local_vars_configuration


   .. py:attribute:: _id
      :value: None



   .. py:attribute:: _priority
      :value: None



   .. py:attribute:: _access
      :value: None



   .. py:attribute:: _ext_id
      :value: None



   .. py:attribute:: _name
      :value: None



   .. py:attribute:: _description
      :value: None



   .. py:attribute:: _instance
      :value: None



   .. py:attribute:: _role
      :value: None



   .. py:attribute:: _user
      :value: None



   .. py:attribute:: _workspace
      :value: None



   .. py:attribute:: _address_range
      :value: None



   .. py:attribute:: discriminator
      :value: None



   .. py:property:: id
      E501


      :return: The id of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the id of this AdminRule.  # noqa


   .. py:property:: priority
      E501


      :return: The priority of this AdminRule.  # noqa: E501
      :rtype: int

      :type: Gets the priority of this AdminRule.  # noqa


   .. py:property:: access
      E501


      :return: The access of this AdminRule.  # noqa: E501
      :rtype: AdminGrantType

      :type: Gets the access of this AdminRule.  # noqa


   .. py:property:: ext_id
      E501


      :return: The ext_id of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the ext_id of this AdminRule.  # noqa


   .. py:property:: name
      E501


      :return: The name of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the name of this AdminRule.  # noqa


   .. py:property:: description
      E501


      :return: The description of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the description of this AdminRule.  # noqa


   .. py:property:: instance
      E501


      :return: The instance of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the instance of this AdminRule.  # noqa


   .. py:property:: role
      E501


      :return: The role of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the role of this AdminRule.  # noqa


   .. py:property:: user
      E501


      :return: The user of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the user of this AdminRule.  # noqa


   .. py:property:: workspace
      E501


      :return: The workspace of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the workspace of this AdminRule.  # noqa


   .. py:property:: address_range
      E501

      IPv4 address with optional /nn on the end with values from 0 - 32  # noqa: E501

      :return: The address_range of this AdminRule.  # noqa: E501
      :rtype: str

      :type: Gets the address_range of this AdminRule.  # noqa


   .. py:method:: to_dict(serialize=False)

      Returns the model properties as a dict



   .. py:method:: to_str()

      Returns the string representation of the model



   .. py:method:: __repr__()

      For `print` and `pprint`



   .. py:method:: __eq__(other)

      Returns true if both objects are equal



   .. py:method:: __ne__(other)

      Returns true if both objects are not equal



