geonode.geoserver
=================

.. py:module:: geonode.geoserver


Subpackages
-----------

.. toctree::
   :maxdepth: 1

   /autoapi/geonode/geoserver/acl/index
   /autoapi/geonode/geoserver/createlayer/index
   /autoapi/geonode/geoserver/management/index
   /autoapi/geonode/geoserver/processing/index
   /autoapi/geonode/geoserver/tests/index


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/geonode/geoserver/context_processors/index
   /autoapi/geonode/geoserver/helpers/index
   /autoapi/geonode/geoserver/manager/index
   /autoapi/geonode/geoserver/models/index
   /autoapi/geonode/geoserver/ows/index
   /autoapi/geonode/geoserver/security/index
   /autoapi/geonode/geoserver/signals/index
   /autoapi/geonode/geoserver/tasks/index
   /autoapi/geonode/geoserver/upload/index
   /autoapi/geonode/geoserver/urls/index
   /autoapi/geonode/geoserver/views/index


Attributes
----------

.. autoapisummary::

   geonode.geoserver.logger
   geonode.geoserver.default_app_config
   geonode.geoserver.BACKEND_PACKAGE


Classes
-------

.. autoapisummary::

   geonode.geoserver.NotificationsAppConfigBase
   geonode.geoserver.GeoserverAppConfig


Functions
---------

.. autoapisummary::

   geonode.geoserver.run_setup_hooks
   geonode.geoserver.set_resource_links


Package Contents
----------------

.. py:class:: NotificationsAppConfigBase

   Bases: :py:obj:`django.apps.AppConfig`


   Base class for AppConfig notifications setup

   You should subclass it and provide list of notifications
   in NOTIFICATIONS attribute to automatically register to
   post_migrate signal.


   .. py:attribute:: NOTIFICATIONS


   .. py:method:: _get_logger()


   .. py:method:: _register_notifications(*args, **kwargs)


   .. py:method:: ready()


.. py:data:: logger

.. py:function:: run_setup_hooks(*args, **kwargs)

.. py:function:: set_resource_links(*args, **kwargs)

.. py:class:: GeoserverAppConfig

   Bases: :py:obj:`geonode.notifications_helper.NotificationsAppConfigBase`


   Base class for AppConfig notifications setup

   You should subclass it and provide list of notifications
   in NOTIFICATIONS attribute to automatically register to
   post_migrate signal.


   .. py:attribute:: name
      :value: 'geonode.geoserver'



   .. py:attribute:: NOTIFICATIONS


   .. py:method:: ready()


.. py:data:: default_app_config
   :value: 'geonode.geoserver.GeoserverAppConfig'


.. py:data:: BACKEND_PACKAGE
   :value: 'geonode.geoserver'


