geonode.upload.upload
=====================

.. py:module:: geonode.upload.upload

.. autoapi-nested-parse::

   Provide views and business logic of doing an upload.

   The upload process may be multi step so views are all handled internally here
   by the view function.

   The pattern to support separation of view/logic is each step in the upload
   process is suffixed with "_step". The view for that step is suffixed with
   "_step_view". The goal of separation of view/logic is to support various
   programmatic uses of this API. The logic steps should not accept request objects
   or return response objects.

   State is stored in a UploaderSession object stored in the user's session.
   This needs to be made more stateful by adding a model.



Attributes
----------

.. autoapisummary::

   geonode.upload.upload.logger


Classes
-------

.. autoapisummary::

   geonode.upload.upload.UploaderSession


Module Contents
---------------

.. py:data:: logger

.. py:class:: UploaderSession(**kw)

   All objects held must be able to survive a good pickling


   .. py:attribute:: import_session
      :value: None



   .. py:attribute:: import_sld_file
      :value: None



   .. py:attribute:: tempdir
      :value: None



   .. py:attribute:: base_file
      :value: None



   .. py:attribute:: name
      :value: None



   .. py:attribute:: charset
      :value: 'UTF-8'



   .. py:attribute:: permissions
      :value: None



   .. py:attribute:: time_transforms
      :value: None



   .. py:attribute:: update_mode
      :value: None



   .. py:attribute:: time
      :value: None



   .. py:attribute:: dataset_title
      :value: None



   .. py:attribute:: dataset_abstract
      :value: None



   .. py:attribute:: completed_step
      :value: None



   .. py:attribute:: error_msg
      :value: None



   .. py:attribute:: upload_type
      :value: None



   .. py:attribute:: spatial_files_uploaded
      :value: True



   .. py:attribute:: time_info
      :value: None



   .. py:attribute:: mosaic
      :value: None



   .. py:attribute:: append_to_mosaic_opts
      :value: None



   .. py:attribute:: append_to_mosaic_name
      :value: None



   .. py:attribute:: mosaic_time_regex
      :value: None



   .. py:attribute:: mosaic_time_value
      :value: None



   .. py:attribute:: user
      :value: None



   .. py:method:: cleanup()

      do what we should at the given state of the upload



