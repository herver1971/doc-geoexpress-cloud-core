geonode.catalogue.tests
=======================

.. py:module:: geonode.catalogue.tests


Attributes
----------

.. autoapisummary::

   geonode.catalogue.tests.logger


Classes
-------

.. autoapisummary::

   geonode.catalogue.tests.CatalogueTest
   geonode.catalogue.tests.UUIDResolverTest


Module Contents
---------------

.. py:data:: logger

.. py:class:: CatalogueTest

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   .. py:method:: setUpClass()
      :classmethod:



   .. py:method:: tearDownClass()
      :classmethod:



   .. py:method:: setUp()


   .. py:method:: test_get_catalog()

      Tests the get_catalogue function works.



   .. py:method:: test_update_metadata_records()


   .. py:method:: test_given_a_simple_request_should_return_200()


   .. py:method:: test_given_a_request_for_a_single_dataset_should_return_single_value_in_xml_without_dataset_filter()


   .. py:method:: test_given_a_request_for_a_single_dataset_should_return_empty_value_in_xml_with_dataset_filter()


   .. py:method:: test_given_a_request_for_multiple_dataset_should_return_empty_value_in_xml_with_dataset_filter()


   .. py:method:: test_given_a_request_for_multiple_dataset_should_return_multiple_value_in_xml_with_dataset_filter()


   .. py:method:: dataset_filter(dataset)
      :staticmethod:



   .. py:method:: dataset_filter_multiple(dataset)
      :staticmethod:



   .. py:method:: __request_factory_single(uuid)
      :staticmethod:



   .. py:method:: __request_factory_multiple()
      :staticmethod:



.. py:class:: UUIDResolverTest

   Bases: :py:obj:`geonode.tests.base.GeoNodeBaseTestSupport`


   .. py:method:: setUp()


   .. py:method:: tearDown()


   .. py:method:: test_uuid_resolver_existing_dataset()


   .. py:method:: test_uuid_resolver_non_existing_dataset()


   .. py:method:: test_uuid_resolver_missing_permissions()


