geonode.catalogue.backends.generic
==================================

.. py:module:: geonode.catalogue.backends.generic


Attributes
----------

.. autoapisummary::

   geonode.catalogue.backends.generic.logger
   geonode.catalogue.backends.generic.TIMEOUT
   geonode.catalogue.backends.generic.METADATA_FORMATS


Classes
-------

.. autoapisummary::

   geonode.catalogue.backends.generic.Catalogue
   geonode.catalogue.backends.generic.CatalogueBackend


Module Contents
---------------

.. py:data:: logger

.. py:data:: TIMEOUT
   :value: 10


.. py:data:: METADATA_FORMATS

.. py:class:: Catalogue(*args, **kwargs)

   Bases: :py:obj:`owslib.catalogue.csw2.CatalogueServiceWeb`


   .. py:attribute:: url


   .. py:attribute:: user
      :value: None



   .. py:attribute:: password
      :value: None



   .. py:attribute:: type


   .. py:attribute:: local
      :value: False



   .. py:attribute:: _group_ids


   .. py:attribute:: _operation_ids


   .. py:attribute:: connected
      :value: False



   .. py:attribute:: skip_caps


   .. py:attribute:: upurl


   .. py:attribute:: base


   .. py:method:: __enter__(*args, **kwargs)


   .. py:method:: __exit__(*args, **kwargs)


   .. py:method:: login()


   .. py:method:: logout()


   .. py:method:: get_by_uuid(uuid)


   .. py:method:: url_for_uuid(uuid, outputschema)


   .. py:method:: urls_for_uuid(uuid)

      Returns list of valid GetRecordById URLs for a given record



   .. py:method:: csw_gen_xml(layer, template)


   .. py:method:: csw_gen_anytext(xml)

      Get all element data from an XML document



   .. py:method:: csw_request(layer, template)


   .. py:method:: create_from_dataset(layer)


   .. py:method:: delete_dataset(layer)


   .. py:method:: update_dataset(layer)


   .. py:method:: search(keywords, startposition, maxrecords, bbox)

      CSW search wrapper



   .. py:method:: normalize_bbox(bbox)


   .. py:method:: metadatarecord2dict(rec)

      Accepts a node representing a catalogue result record and builds a POD structure representing the search result.



   .. py:method:: extract_links(rec)


.. py:class:: CatalogueBackend(*args, **kwargs)

   Bases: :py:obj:`geonode.catalogue.backends.base.BaseCatalogueBackend`


   .. py:attribute:: catalogue


   .. py:method:: get_record(uuid)


   .. py:method:: search_records(keywords, start, limit, bbox)


   .. py:method:: remove_record(uuid)


   .. py:method:: create_record(item)


