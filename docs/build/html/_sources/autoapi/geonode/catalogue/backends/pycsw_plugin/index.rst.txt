geonode.catalogue.backends.pycsw_plugin
=======================================

.. py:module:: geonode.catalogue.backends.pycsw_plugin


Attributes
----------

.. autoapisummary::

   geonode.catalogue.backends.pycsw_plugin.LOGGER
   geonode.catalogue.backends.pycsw_plugin.GEONODE_SERVICE_TYPES


Classes
-------

.. autoapisummary::

   geonode.catalogue.backends.pycsw_plugin.GeoNodeRepository


Module Contents
---------------

.. py:data:: LOGGER

.. py:data:: GEONODE_SERVICE_TYPES

.. py:class:: GeoNodeRepository(context, repo_filter=None)

   Bases: :py:obj:`pycsw.core.repository.Repository`


   Class to interact with underlying repository


   .. py:attribute:: context


   .. py:attribute:: filter


   .. py:attribute:: fts
      :value: False



   .. py:attribute:: label
      :value: 'GeoNode'



   .. py:attribute:: local_ingest
      :value: True



   .. py:attribute:: dbtype


   .. py:attribute:: queryables


   .. py:method:: dataset()

      Stub to mock a pycsw dataset object for Transactions



   .. py:method:: query_ids(ids)

      Query by list of identifiers



   .. py:method:: query_domain(domain, typenames, domainquerytype='list', count=False)

      Query by property domain values



   .. py:method:: query_insert(direction='max')

      Query to get latest (default) or earliest update to repository



   .. py:method:: query_source(source)

      Query by source



   .. py:method:: query(constraint, sortby=None, typenames=None, maxrecords=10, startposition=0)

      Query records from underlying repository



   .. py:method:: delete(constraint)

      Delete a record from the repository



   .. py:method:: _get_repo_filter(query)

      Apply repository wide side filter / mask query



