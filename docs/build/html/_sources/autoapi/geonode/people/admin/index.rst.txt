geonode.people.admin
====================

.. py:module:: geonode.people.admin


Attributes
----------

.. autoapisummary::

   geonode.people.admin.csrf_protect_m
   geonode.people.admin.sensitive_post_parameters_m


Classes
-------

.. autoapisummary::

   geonode.people.admin.ProfileAdmin


Module Contents
---------------

.. py:data:: csrf_protect_m

.. py:data:: sensitive_post_parameters_m

.. py:class:: ProfileAdmin

   Bases: :py:obj:`django.contrib.admin.ModelAdmin`


   .. py:attribute:: add_form_template
      :value: 'admin/auth/user/add_form.html'



   .. py:attribute:: change_user_password_template
      :value: None



   .. py:attribute:: fieldsets


   .. py:attribute:: add_fieldsets


   .. py:attribute:: form


   .. py:attribute:: add_form


   .. py:attribute:: change_password_form


   .. py:attribute:: list_display
      :value: ('id', 'username', 'organization', 'email', 'first_name', 'last_name', 'is_staff', 'is_active')



   .. py:attribute:: list_filter
      :value: ('is_staff', 'is_superuser', 'is_active', 'groups')



   .. py:attribute:: search_fields
      :value: ('username', 'organization', 'profile', 'first_name', 'last_name', 'email')



   .. py:attribute:: ordering
      :value: ('username',)



   .. py:attribute:: filter_horizontal
      :value: ('groups', 'user_permissions')



   .. py:attribute:: actions


   .. py:method:: get_fieldsets(request, obj=None)


   .. py:method:: get_form(request, obj=None, **kwargs)

      Use special form during user creation



   .. py:method:: get_urls()


   .. py:method:: lookup_allowed(lookup, value)


   .. py:method:: add_view(request, form_url='', extra_context=None)


   .. py:method:: user_change_password(request, id, form_url='')


   .. py:method:: response_add(request, obj, post_url_continue=None)

      Determines the HttpResponse for the add_view stage. It mostly defers to
      its superclass implementation but is customized because the User model
      has a slightly different workflow.



