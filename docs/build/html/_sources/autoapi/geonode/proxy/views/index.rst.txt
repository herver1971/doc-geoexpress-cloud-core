geonode.proxy.views
===================

.. py:module:: geonode.proxy.views


Attributes
----------

.. autoapisummary::

   geonode.proxy.views.BUFFER_CHUNK_SIZE
   geonode.proxy.views.TIMEOUT
   geonode.proxy.views.LINK_TYPES
   geonode.proxy.views.logger
   geonode.proxy.views.ows_regexp
   geonode.proxy.views._hoppish


Classes
-------

.. autoapisummary::

   geonode.proxy.views.OWSListView


Functions
---------

.. autoapisummary::

   geonode.proxy.views.proxy
   geonode.proxy.views.download
   geonode.proxy.views.is_hop_by_hop
   geonode.proxy.views.fetch_response_headers


Module Contents
---------------

.. py:data:: BUFFER_CHUNK_SIZE

.. py:data:: TIMEOUT
   :value: 30


.. py:data:: LINK_TYPES

.. py:data:: logger

.. py:data:: ows_regexp

.. py:function:: proxy(request, url=None, response_callback=None, sec_chk_hosts=True, sec_chk_rules=True, timeout=None, allowed_hosts=[], headers=None, access_token=None, **kwargs)

.. py:function:: download(request, resourceid, sender=Dataset)

.. py:class:: OWSListView

   Bases: :py:obj:`django.views.generic.View`


   .. py:method:: get(request)


.. py:data:: _hoppish

.. py:function:: is_hop_by_hop(header_name)

   Return true if 'header_name' is an HTTP/1.1 "Hop-by-Hop" header


.. py:function:: fetch_response_headers(response, response_headers)

