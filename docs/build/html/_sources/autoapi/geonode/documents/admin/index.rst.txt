geonode.documents.admin
=======================

.. py:module:: geonode.documents.admin


Classes
-------

.. autoapisummary::

   geonode.documents.admin.DocumentAdminForm
   geonode.documents.admin.DocumentAdmin


Module Contents
---------------

.. py:class:: DocumentAdminForm

   Bases: :py:obj:`geonode.base.admin.ResourceBaseAdminForm`


   .. py:class:: Meta

      Bases: :py:obj:`geonode.base.admin.ResourceBaseAdminForm.Meta`


      .. py:attribute:: model


      .. py:attribute:: fields
         :value: '__all__'




.. py:class:: DocumentAdmin

   Bases: :py:obj:`modeltranslation.admin.TabbedTranslationAdmin`


   .. py:attribute:: exclude
      :value: ('ll_bbox_polygon', 'bbox_polygon', 'srid')



   .. py:attribute:: list_display
      :value: ('id', 'title', 'date', 'category', 'group', 'is_approved', 'is_published', 'metadata_completeness')



   .. py:attribute:: list_display_links
      :value: ('id',)



   .. py:attribute:: list_editable
      :value: ('title', 'category', 'group', 'is_approved', 'is_published')



   .. py:attribute:: list_filter
      :value: ('date', 'date_type', 'restriction_code_type', 'category', 'group', 'is_approved', 'is_published')



   .. py:attribute:: search_fields
      :value: ('title', 'abstract', 'purpose', 'is_approved', 'is_published')



   .. py:attribute:: readonly_fields
      :value: ('geographic_bounding_box',)



   .. py:attribute:: date_hierarchy
      :value: 'date'



   .. py:attribute:: form


   .. py:attribute:: actions


   .. py:method:: delete_queryset(request, queryset)

      We need to invoke the 'ResourceBase.delete' method even when deleting through the admin batch action



