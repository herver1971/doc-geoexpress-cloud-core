geonode.documents
=================

.. py:module:: geonode.documents


Subpackages
-----------

.. toctree::
   :maxdepth: 1

   /autoapi/geonode/documents/api/index
   /autoapi/geonode/documents/exif/index
   /autoapi/geonode/documents/management/index


Submodules
----------

.. toctree::
   :maxdepth: 1

   /autoapi/geonode/documents/admin/index
   /autoapi/geonode/documents/enumerations/index
   /autoapi/geonode/documents/forms/index
   /autoapi/geonode/documents/models/index
   /autoapi/geonode/documents/search_indexes/index
   /autoapi/geonode/documents/tasks/index
   /autoapi/geonode/documents/tests/index
   /autoapi/geonode/documents/translation/index
   /autoapi/geonode/documents/urls/index
   /autoapi/geonode/documents/utils/index
   /autoapi/geonode/documents/views/index


Attributes
----------

.. autoapisummary::

   geonode.documents.default_app_config


Classes
-------

.. autoapisummary::

   geonode.documents.NotificationsAppConfigBase
   geonode.documents.DocumentsAppConfig


Package Contents
----------------

.. py:class:: NotificationsAppConfigBase

   Bases: :py:obj:`django.apps.AppConfig`


   Base class for AppConfig notifications setup

   You should subclass it and provide list of notifications
   in NOTIFICATIONS attribute to automatically register to
   post_migrate signal.


   .. py:attribute:: NOTIFICATIONS


   .. py:method:: _get_logger()


   .. py:method:: _register_notifications(*args, **kwargs)


   .. py:method:: ready()


.. py:class:: DocumentsAppConfig

   Bases: :py:obj:`geonode.notifications_helper.NotificationsAppConfigBase`


   Base class for AppConfig notifications setup

   You should subclass it and provide list of notifications
   in NOTIFICATIONS attribute to automatically register to
   post_migrate signal.


   .. py:attribute:: name
      :value: 'geonode.documents'



   .. py:attribute:: NOTIFICATIONS


.. py:data:: default_app_config
   :value: 'geonode.documents.DocumentsAppConfig'


