geonode.documents.api.tests
===========================

.. py:module:: geonode.documents.api.tests


Attributes
----------

.. autoapisummary::

   geonode.documents.api.tests.logger


Classes
-------

.. autoapisummary::

   geonode.documents.api.tests.DocumentsApiTests


Module Contents
---------------

.. py:data:: logger

.. py:class:: DocumentsApiTests

   Bases: :py:obj:`rest_framework.test.APITransactionTestCase`


   .. py:attribute:: fixtures
      :value: ['initial_data.json', 'group_test_data.json', 'default_oauth_apps.json']



   .. py:method:: setUp()


   .. py:method:: test_documents()

      Ensure we can access the Documents list.



   .. py:method:: test_extra_metadata_included_with_param()


   .. py:method:: test_creation_return_error_if_file_is_not_passed()

      If file_path is not available, should raise error



   .. py:method:: test_creation_return_error_if_file_is_none()

      If file_path is not available, should raise error



   .. py:method:: test_creation_should_rase_exec_for_unsupported_files()


   .. py:method:: test_creation_should_create_the_doc()

      If file_path is not available, should raise error



   .. py:method:: test_patch_point_of_contact()


   .. py:method:: test_patch_metadata_author()


   .. py:method:: test_patch_processor()


   .. py:method:: test_patch_publisher()


   .. py:method:: test_patch_custodian()


   .. py:method:: test_patch_distributor()


   .. py:method:: test_patch_resource_user()


   .. py:method:: test_patch_resource_provider()


   .. py:method:: test_patch_originator()


   .. py:method:: test_patch_principal_investigator()


   .. py:method:: test_creation_should_create_the_doc_and_update_the_bbox()

      If file_path is not available, should raise error



   .. py:method:: test_file_path_and_doc_path_are_not_returned()

      If file_path and doc_path should not be visible
      from the GET payload



   .. py:method:: test_creation_from_url_should_create_the_doc()

      If file_path is not available, should raise error



   .. py:method:: test_remote_document_is_marked_remote()

      Tests creating an external document set its sourcetype to REMOTE.



   .. py:method:: test_either_path_or_url_doc()

      If file_path is not available, should raise error



