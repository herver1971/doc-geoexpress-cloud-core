geonode.br.management.commands.backup
=====================================

.. py:module:: geonode.br.management.commands.backup


Attributes
----------

.. autoapisummary::

   geonode.br.management.commands.backup.logger


Classes
-------

.. autoapisummary::

   geonode.br.management.commands.backup.Command


Module Contents
---------------

.. py:data:: logger

.. py:class:: Command

   Bases: :py:obj:`django.core.management.base.BaseCommand`


   .. py:attribute:: help
      :value: 'Backup the GeoNode application data'



   .. py:method:: add_arguments(parser)


   .. py:method:: handle(**options)


   .. py:method:: execute_backup(**options)


   .. py:method:: create_geoserver_backup(config, settings, target_folder, ignore_errors)


   .. py:method:: dump_geoserver_raster_data(config, settings, target_folder)


   .. py:method:: dump_geoserver_vector_data(config, settings, target_folder)


   .. py:method:: dump_geoserver_externals(config, settings, target_folder)

      Scan layers xml and see if there are external references.

      Find references to data outside data dir and include them in
      backup. Also, some references may point to specific url, which
      may not be available later.



